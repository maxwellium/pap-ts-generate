"use strict";Object.defineProperty(exports,"__esModule",{value:true});const path_1=require("path");const bmf_steuerrechner_api_1=require("bmf-steuerrechner-api");const index_1=require("../index");const parameters_1=require("./parameters");const persistance_1=require("./persistance");const FILEMAME=path_1.join(__dirname,"samples.txt");const VERSION_MAP=[{y:2006,m:[...Array(13).keys()].slice(1)},{y:2007,m:[...Array(13).keys()].slice(1)},{y:2008,m:[...Array(13).keys()].slice(1)},{y:2009,m:[...Array(13).keys()].slice(1)},{y:2010,m:[...Array(13).keys()].slice(1)},{y:2011,m:[...Array(12).keys()].slice(1)},{y:2011,m:[12]},{y:2012,m:[...Array(13).keys()].slice(1)},{y:2013,m:[...Array(13).keys()].slice(1)},{y:2014,m:[...Array(13).keys()].slice(1)},{y:2015,m:[...Array(12).keys()].slice(1)},{y:2015,m:[12]},{y:2016,m:[...Array(13).keys()].slice(1)},{y:2017,m:[...Array(13).keys()].slice(1)},{y:2018,m:[...Array(13).keys()].slice(1)},{y:2019,m:[...Array(13).keys()].slice(1)}];function calculate(e,r){let s=new index_1.calculatorList[e];s.inputs=r;s.main();return s.outputs}function compare(e,r){let s=true,t={};for(let a in e){if(e[a]!==r[a]){t[a]=`${e[a]} | ${r[a]}`;s=false}}return{pass:s,result:t}}exports.compare=compare;function transformBmfResponse(e){const r={};for(let s in e.ausgaben){r[s]=parseInt(e.ausgaben[s].value)}return r}async function run(e){for(let r=0;r<e;r++){const e=parameters_1.randomized(),r=[];for(let s=0;s<index_1.calculatorList.length;s++){const t=VERSION_MAP[s].y,a=VERSION_MAP[s].m[0],n=calculate(s,e),c=await bmf_steuerrechner_api_1.bmf(e,t,a),o=transformBmfResponse(c),i=compare(n,o);r.push({y:t,m:a,i:e,o:o});if(!i.pass){console.log(i,e,n,{y:t,m:a})}else{console.log("passed")}}await persistance_1.saveSamples(FILEMAME,r)}}exports.run=run;function rerun(){const e=persistance_1.replaySampleStream(FILEMAME);e.on("line",e=>{const r=new index_1.calculatorsByMonth[e.y][e.m];r.inputs=e.i;r.main();const s=compare(r.outputs,e.o);if(!s.pass){console.log(s,e.i,e.o,{y:e.y,m:e.m})}else{console.log("passed")}})}exports.rerun=rerun;let count=0;if(process.argv&&process.argv[2]){count=parseInt(process.argv[2])}if(isNaN(count)||count===0){rerun()}else{run(count)}