"use strict";Object.defineProperty(exports,"__esModule",{value:true});const readline_1=require("readline");const fs_1=require("fs");const events_1=require("events");const util_1=require("util");const crc32_1=require("./crc32");const appendFileAsync=util_1.promisify(fs_1.appendFile);async function saveSamples(e,r){await appendFileAsync(e,r.map(e=>`${generateKey(e.y,e.m,e.i)} ${JSON.stringify(e)}\n`).join(""))}exports.saveSamples=saveSamples;function generateKey(e,r,t){return crc32_1.crc32(Buffer.from(`${e}${r}${JSON.stringify(t)}`))}exports.generateKey=generateKey;function replaySampleStream(e){const r=new events_1.EventEmitter,t=readline_1.createInterface({input:fs_1.createReadStream(e,"utf8"),crlfDelay:Infinity});let n=-1;t.on("line",t=>{n++;if(!t.length){return}try{r.emit("line",JSON.parse(t.substr(t.indexOf(" "))))}catch(r){console.error(`could not decode in ${e} line ${n}`)}});return r}exports.replaySampleStream=replaySampleStream;